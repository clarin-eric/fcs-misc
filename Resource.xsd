<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fcs="http://clarin.eu/fcs/1.0"
    targetNamespace="http://clarin.eu/fcs/1.0" elementFormDefault="qualified">
    <xs:annotation>
        <xs:documentation>This schema shall define the generic inner structure 
            of one record within the (federated) CLARIN content search.
            This means it would validate the xml-fragment inside sru:record/sru:recordData
            and would be referenced in sru:record/sru:recordSchema 
            of the sru:searchRetrieveResponse.
            
            It shall allow:
            a) any metadata about the matched record, including reference to a CMD-record
            b) separate (metadata) description of full Resource and ResourceFragment (matching part of the resource) 
            c) providing metadata AND content 
            d) various views on the data delivered (text-snippet, image, individual annotation-layers, ...)
            e) providing links (either as PID or as simple URLs) to any of: 
               Resource, ResourceFragment, Metadata (CMD-record), DataViews            
         </xs:documentation>
    </xs:annotation>

    <xs:element name="Resource" type="fcs:ResourceType"/>

    <xs:complexType name="ResourceType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="Resource" type="fcs:ResourceType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="DataView" type="fcs:DataViewType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ResourceFragment" type="fcs:ResourceFragmentType"/>
        </xs:sequence>
        <xs:attribute name="pid" type="fcs:pidType" use="optional"/>
        <xs:attribute name="ref" type="fcs:refType" use="optional"/>
    </xs:complexType>


    <xs:complexType name="ResourceFragmentType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="DataView" type="fcs:DataViewType"/>
        </xs:sequence>
        <xs:attribute name="pid" type="fcs:pidType" use="optional"/>
        <xs:attribute name="ref" type="fcs:refType" use="optional"/>
    </xs:complexType>

    <xs:complexType name="DataViewType">
        <xs:annotation>
            <xs:documentation>
                The content expressed in XML that complies with another XML Schema (namespace=#other).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace="##other" processContents="strict"/>
        </xs:sequence>
        <xs:attribute name="type" type="fcs:DataViewTypeType"/>
        <xs:attribute name="pid" type="fcs:pidType"/>
        <xs:attribute name="ref" type="fcs:refType"/>
    </xs:complexType>

    <xs:simpleType name="DataViewTypeType">
        <xs:annotation>
            <xs:documentation>
                This is obviously not exhaustive. Could this be a superset of of MIME-type?
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="kwic"/>
            <xs:enumeration value="fulltext"/>
            <xs:enumeration value="image"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="pidType">
        <xs:annotation>
            <xs:documentation>a persistent! identifier of given entity. This should be really only used, when a PID is available. Provider should also fill the sru:record/sru:recordIdentifier-element. If there are more PIDs in one record (for Resource, Metadata, DataView), provider selects the "most important"/primary PID to put into sru:recordIdentifier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:anyURI"/>
    </xs:simpleType>

    <xs:simpleType name="refType">
        <xs:annotation>
            <xs:documentation>a URL to given entity, that can be invoked directly (via HTTP)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:anyURI"/>
    </xs:simpleType>

</xs:schema>
